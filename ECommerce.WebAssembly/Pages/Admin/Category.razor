@page "/category"
@page "/category/{id:int}"

@inject ICategoryService _categoryService
@inject IToastService _toastService
@inject NavigationManager _navService

@attribute [Authorize(Roles = "Administrador")]

<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@title</p>
</div>
<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">

        <EditForm Model="model" OnValidSubmit="SaveChanges">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="input-group">
                <span class="input-group-text bg-light">Nombre</span>
                <input type="text" class="form-control" @bind-value="model.NameCategory">
            </div>
            <ValidationMessage For="@(()=>model.NameCategory)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@button</button>
                <a href="/categories" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private string title = "Nueva categoria";
    private string button = "Crear";
    private CategoryDTO model = new CategoryDTO();

    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            title = "Editar categoria";
            button = "Actualizar";

            var response = await _categoryService.GetCategory(Id);
            if (response.IsCorrect)
            {
                model = (CategoryDTO)response.Result!;
            }
            else
            {
                _toastService.ShowError(response.Message);
            }
        }
    }

    private async Task SaveChanges()
    {
        bool response = true;
        string message = string.Empty;

        if (Id != 0)
        {
            var res = await _categoryService.Updatecategory(model);
            if (res.IsCorrect)
            {
                message = "La categoria fue editada";
            }
            else
            {
                response = false;
                message = "No se pudo editar";
            }
        }
        else
        {
            var res = await _categoryService.CreateCategory(model);
            if (res.IsCorrect)
            {
                message = "La categoria fue creada";
            }
            else
            {
                response = false;
                message = "No se pudo crear la categoria";
            }
        }

        if (response)
        {
            _toastService.ShowSuccess(message);
            _navService.NavigateTo("/categories");
        }
        else
        {
            _toastService.ShowError(message);
        }
    }
}
