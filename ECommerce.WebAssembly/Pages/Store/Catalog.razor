@page "/"
@page "/catalog"

@inject ICategoryService _categoryService
@inject IProductService _productService
@inject NavigationManager _navService


<div class="row justify-content-center mt-3 mb-4">

    <div class="col-sm-6 col-md-8 col-xl-9">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Buscar producto..." @bind-value="found">
            <button class="btn btn-primary" type="button" @onclick="(async () => await  GetCatalog())">
                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#ffffff">
                    <path d="M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z" />
                </svg>
            </button>
        </div>
    </div>
</div>



<div class="row">
    <div class="col-sm-3 mb-5 mb-sm-5 mb-md-5 mb-lg-0 mb-xl-0 mb-xxl-0">

        <div class="card border border-light">
            <div class="card-header text-white bg-primary">
                Categorias
            </div>
            <div class="card-body">
                @if (listCategory != null)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="category" id="Total" value="Total"
                               @onchange="RadioSelection"
                               checked=@(selectedCategory.Equals("Total"))>
                        <label class="form-check-label" for="Total">
                            Todos
                        </label>
                    </div>

                    @foreach(var item in listCategory)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="category" id="@item.IdCategory" value="@item.NameCategory"
                                   @onchange="RadioSelection"
                                   checked=@(selectedCategory.Equals(item.NameCategory, StringComparison.OrdinalIgnoreCase))>
                            <label class="form-check-label" for="@item.IdCategory">
                                @item.NameCategory
                            </label>
                        </div>
                    }
                }
                else
                {
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
            </div>

        </div>

    </div>

    <div class="col-sm-9 d-flex flex-row flex-wrap justify-content-center align-item-center gap-4">
        @if (listProduct != null)
        {
            @foreach (var item in listProduct)
            {
                <div class="card h-auto border border-light" style="width: 250px;">
                    <!-- Sale badge-->
                    @if (DateTime.Now < item.CreationDate.Value.AddDays(30))
                    {
                        <div class="badge bg-primary text-white position-absolute" style="top: 0.5rem; right: 0.5rem">Nuevo</div>
                    }
                    <!-- Product image-->
                    <img class="card-img-top border-dark border-1 object-fit-cover" src="@item.Picture" style="width:100%;height:250px">
                    <!-- Product details-->
                    <div class="card-body p-4">
                        <div class="text-center">
                            <!-- Product name-->
                            <h5 class="fw-bolder">@item.NameProduct</h5>
                            <!-- Product price-->
                            @if (item.OfferPrice != 0 && item.OfferPrice < item.Price)
                            {
                                <span class="text-danger text-decoration-line-through">$@item.Price</span>
                                <span>$@item.OfferPrice</span>
                            }
                            else
                            {
                                <span>$@item.Price</span>
                            }
                        </div>
                    </div>
                    <!-- Product actions-->
                    <div class="card-footer p-3 pt-0 border-top-0 bg-transparent">
                        <div class="text-center"><a class="btn btn-primary mt-auto" href="/detail/@item.IdProduct">Ver producto</a></div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        }
    </div>
</div>

@code {
    private List<ProductDTO>? listProduct = null;
    private List<CategoryDTO>? listCategory = null;

    private string found = string.Empty;
    private string selectedCategory = "Total";

    private async Task GetCategories(string value = "")
    {
        var response = await _categoryService.ListCategory(value);
        if (response.IsCorrect)
        {
            listCategory = (List<CategoryDTO>)response.Result!;
        }
        else
        {
            listCategory = new List<CategoryDTO>();
        }
    }

    private async Task GetCatalog()
    {
        var response = await _productService.ProductCatalog(selectedCategory, found);
        if (response.IsCorrect)
        {
            listProduct = (List<ProductDTO>)response.Result!;
        }
        else
        {
            listProduct = new List<ProductDTO>();
        }
    }

    private async Task RadioSelection(ChangeEventArgs args)
    {
        selectedCategory = args.Value.ToString();
        found = "";
        await GetCatalog();
    }

    protected override async Task OnInitializedAsync()
    {
        await GetCategories();
        await GetCatalog();
    }
}